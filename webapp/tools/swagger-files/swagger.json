{
  "openapi": "3.0.1",
  "info": {
    "title": "Library API",
    "description": "A simple API for managing a library system.",
    "version": "v1"
  },
  "paths": {
    "/books": {
      "get": {
        "tags": [
          "Book"
        ],
        "summary": "Get all books",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/book/{id}": {
      "get": {
        "tags": [
          "Book"
        ],
        "summary": "Get a specific book",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Book"
        ],
        "summary": "Update a book",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookWithId"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BookWithId"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BookWithId"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/book": {
      "post": {
        "tags": [
          "Book"
        ],
        "summary": "Add a new book",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Book"
        ],
        "summary": "Soft delete a book",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Book": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "author": {
            "type": "string",
            "nullable": true
          },
          "isbn": {
            "type": "string",
            "nullable": true
          },
          "publishedDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BookWithId": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "author": {
            "type": "string",
            "nullable": true
          },
          "isbn": {
            "type": "string",
            "nullable": true
          },
          "publishedDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "ApiKey": {
        "type": "apiKey",
        "description": "API token needed to access the endpoints",
        "name": "X-Api-Token",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "ApiKey": [ ]
    }
  ]
}